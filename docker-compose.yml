services:
  redis:
    image: redis:alpine3.20
    restart: unless-stopped

  django:
    image: digistore
    container_name: digistore1
    restart: unless-stopped
    build:
      context: ./
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app/
    ports:
      - "8000:8000"
    environment:
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - DEBUG=True
      - SECRET_KEY=sdlkfhsdlfhslhdslkdjfsldejfdsl@sldfhglsdfhg
    depends_on:
      - redis
      - rabbitmq


  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq1
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    container_name: celery1
    restart: unless-stopped
    build:
      context: ./
      dockerfile: Dockerfile
    command: [ "celery", "-A", "config", "worker", "--loglevel=info", "-E", "-B" ]
    volumes:
      - .:/app/
    environment:
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - DEBUG=True
      - SECRET_KEY=sdlkfhsdlfhslhdslkdjfsldejfdsl@sldfhglsdfhg
    depends_on:
      - redis
      - django
      - rabbitmq

  flower:
    image: mher/flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/

  celerybeat:
    build: .
    command: ["celery", "-A", "config", "beat", "--loglevel=info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]
    volumes:
      - .:/app
    depends_on:
      - redis
      - rabbitmq
